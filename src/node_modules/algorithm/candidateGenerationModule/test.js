var TestObj = require( './index.js');
var Utils = require('../AlgorithmUtilities.js');
var RnaToDna = Utils.RnaToDna;
function ShowCandidates(cands,dna)
{
	if(dna == undefined)
		dna =true;
	var res = "";
	var consRes = "";
	for(var ii = 0; ii < cands.length; ++ii)
	{
		res += "<p>Cut site number " + ii + "</p>";
		consRes += "Cut site number " + ii + "\n";
		for(var jj = 0; jj < cands[ii].length; ++jj)
		{
			var currentSeq = cands[ii][jj].seq;

			var c_pos = cands[ii][jj].cut;
			currentSeq = currentSeq.substr(0,c_pos)+currentSeq.substr(c_pos+1);//REMOVE non-annealing C from comupation

			var computationalResult = 0;//tm_Base_Stacking(currentSeq.replaceAll('U','T'),GLOBAL_PARAMETERS.oligomer_mM,GLOBAL_PARAMETERS.salt_ion_mM,GLOBAL_PARAMETERS.Mg_ion_mM);
			res += "<p>\t" +( dna? RnaToDna(cands[ii][jj].seq): cands[ii][jj].seq )+ "\t"+ c_pos+'</p>';
			consRes += "\t" +( dna? RnaToDna(cands[ii][jj].seq): cands[ii][jj].seq )+ "\t"+ c_pos+'\n';
		}
	}
	console.log(consRes)
	//$('.displayUpdate').html(res);
}

var genSeqsNormal= 
TestObj.GenerateCandidates ('GUACGUAUGCAUCGACUAGUCAGCAGAUCGUACUGAUGCUAGCUAGCUAGCUAGAGAUGAGUACGCCGAGAGUAGGUCGUGCUAGCGCGCGAGAGAGU',
							'GUC', 
							{
								'left_arm_min' : 2 ,
								'right_arm_min' : 2,
								'left_arm_max' : 5,
								'right_arm_max' : 5,
								'promoter' : ''
							}
							);


var genSeqs= 
TestObj.GenerateCandidates ('GUACGUAUGCAUCGACUAGUCAGCAGAUCGUACUGAUGCUAGCUAGCUAGCUAGAGAUGAGUACGCCGAGAGUAGGUCGUGCUAGCGCGCGAGAGAGU',
							'GUC', 
							{
								'left_arm_min' : 2 ,
								'right_arm_min' : 2,
								'left_arm_max' : 5,
								'right_arm_max' : 5,
								'promoter' : 'TAATACGACTCACTATAGGG'
							}
							);
var fromPaper= 
TestObj.GenerateCandidates ('CUACAGAGUGUCAUCUUAUUU',
							'GUC', 
							{
								'left_arm_min' : 2 ,
								'right_arm_min' : 2,
								'left_arm_max' : 5,
								'right_arm_max' : 5,
								'promoter' : ''
							}
							);
							
							
console.log("Original Sequence: " + 'GUACGUAUGCAUCGACUAGUCAGCAGAUCGUACUGAUGCUAGCUAGCUAGCUAGAGAUGAGUACGCCGAGAGUAGGUCGUGCUAGCGCGCGAGAGAGU');						
ShowCandidates(genSeqsNormal);		
					
console.log("Original Sequence: " + 'GUACGUAUGCAUCGACUAGUCAGCAGAUCGUACUGAUGCUAGCUAGCUAGCUAGAGAUGAGUACGCCGAGAGUAGGUCGUGCUAGCGCGCGAGAGAGU');						
ShowCandidates(genSeqs);


console.log("Original Sequence: " + 'CUACAGAGUGUCAUCUUAUUU');						
ShowCandidates(fromPaper,false);
//Cut site number 0
//The G at the marked locaction gets killed (corresponds to C in GUC after RC -> GAC)
// AUGACAC 		   2
// GAUGACAC        3
// AGAUGACAC       4
// AUGACACU        2
// GAUGACACU       3
// AGAUGACACU      4
// AUGACACUC       2
// GAUGACACUC      3
// AGAUGACACUC     4